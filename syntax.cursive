lex = {
    rules = [
        # comment
        [|#.*(?=\r?\n|$)
        ,|                              /* pass */
        ]

        # token separator
        [|[\s]+
        ,|                              /* pass */
        ]

        # argument separator
        [|,
        ,|                              return ','
        ]

        [|\b(prop)\b
        ,|                              return 'PROP'
        ]

        [|\b(set)\b
        ,|                              return 'SET'
        ]

        [|\b(default)\b
        ,|                              return 'DEFAULT'
        ]

        [|[_A-Za-z]+
        ,|                              return 'COMMAND'
        ]

        [|\$[_A-Za-z][_0-9A-Za-z]*
        ,|                              return 'LVALUE'
        ]

        [|[\-+]?\d+(?:\.\d+)?
        ,|                              return 'NUMBER'
        ]

        [|~
        ,|                              return '~'
        ]

        [|\(
        ,|                              return '('
        ]

        [|\)
        ,|                              return ')'
        ]

        [|\+
        ,|                              return '+'
        ]

        [|-
        ,|                              return '-'
        ]

        [|\*
        ,|                              return '*'
        ]

        [|\/
        ,|                              return '/'
        ]

        [|%
        ,|                              return '%'
        ]
    ]
}

start = 'ast'

bnf = {

    ast = [
        ['commands', 'RETN']
    ]

    commands = [
        ['command', 'LIST $1']
        ['commands command', 'PUSH $1, $2']
    ]

    command = [
        ['COMMAND arguments', 'TOKN "command", $1, $2']
        ['PROP prop_definitions', 'TOKN "prop", $2']
        ['SET LVALUE , expression', 'TOKN "set", $2, $4']
    ]

    prop_definitions = [
        ['prop_definition', 'LIST $1']
        ['prop_definitions prop_definition', 'PUSH $1, $2']
    ]

    prop_definition = [
        ['LVALUE', 'TOKN "name", $1']
        ['LVALUE range', 'TOKN "name range", $1, $2']
        ['LVALUE number', 'TOKN "name default", $1, $2']
        ['LVALUE range number', 'TOKN "name range default", $1, $2, $3']
    ]

    arguments = [
        ['', 'LIST']
        ['argument', 'LIST $1']
        ['arguments argument', 'PUSH $1, $2']
        ['arguments , argument', 'PUSH $1, $3']
    ]

    argument = [
        ['default', 'SELF']
        ['expression', 'SELF']
    ]
    default = [['DEFAULT', 'TOKN "default"']]

    primary_expression = [
        ['number', 'SELF']
        ['lvalue', 'SELF']
        ['( expression )', 'SELF $2']
    ]

    prefix_expression = [
        ['primary_expression', 'SELF']
        ['+ primary_expression', 'TOKN "prefix +", $2']
        ['- primary_expression', 'TOKN "prefix -", $2']
    ]

    multiplicative_expression = [
        ['prefix_expression', 'SELF']
        ['multiplicative_expression * prefix_expression', 'TOKN "*", $1, $3']
        ['multiplicative_expression / prefix_expression', 'TOKN "/", $1, $3']
        ['multiplicative_expression % prefix_expression', 'TOKN "%", $1, $3']
    ]

    additive_expression = [
        ['multiplicative_expression', 'SELF']
        ['additive_expression + multiplicative_expression', 'TOKN "+", $1, $3']
        ['additive_expression - multiplicative_expression', 'TOKN "-", $1, $3']
    ]

    expression = [
        ['additive_expression', 'SELF']
    ]
    number = [['NUMBER', 'TOKN "number", +$1']]
    lvalue = [['LVALUE', 'TOKN "lvalue", $1']]

    range = [
        ['NUMBER ~ NUMBER', 'TOKN "range", +$1, +$3']
    ]

}
